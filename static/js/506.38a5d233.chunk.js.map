{"version":3,"file":"static/js/506.38a5d233.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/ContactForm/ContactForm.module.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.module.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.module.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.module.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.module.jsx","components/Modal/Modal.module.jsx","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.module.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;","import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 0.25em;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 5px;\n  border-radius: 5px;\n`;\nexport const Button = styled.button`\n  border-radius: 5px;\n  margin-top: 0.5em;\n  padding: 0.25em 1em;\n  cursor: pointer;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\n\nimport { Form, Input, Label, Button } from './ContactForm.module';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ phone }) => phone === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, phone: formNumber }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 5px;\n  border-radius: 5px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from 'redux/constacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/constacts/selectors';\nimport { Label, Input } from './Filter.module';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUser)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const UserDeletedIcon = styled(FaUserMinus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n\n  padding: 20px 20px;\n\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  /* margin-left: 10px; */\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  padding: 0.563em 1em;\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/constacts/operations';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserIcon,\n  UserDeletedIcon,\n  PhoneIcon,\n} from './ContactListItem.module';\nimport { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        <UserIcon />\n        {name}\n      </ContactName>\n      <ContactNumber>\n        <PhoneIcon />\n        {number}\n      </ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  padding: 0;\n  margin: 0;\n  \n`;","import { useSelector } from 'react-redux';\n\nimport { selectContactsFilter, selectContactsList } from 'redux/constacts/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nimport { ContactsList } from './ContactList.module';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  console.log(visibleContacts);\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, phone, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={phone} />\n      ))}\n    </ContactsList>\n  );\n};","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  margin-bottom: 40px;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n  gap: 1px;\n`;\n\nexport const Form = styled.form`\ndisplay: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;`;\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   margin-top: 12px;\n//   font-size: 16px;\n//   font-weight: 500;\n// `;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  padding: 1.063em 1.5em;\n  margin-left: 28px;\n\n  background-color: #FAE5E5;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  border-radius: 25px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: #f9f9f9;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ModalContent, Overlay } from './Modal.module';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/constacts/operations';\nimport { selectError, selectIsLoading } from 'redux/constacts/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  ContactNavWrapper,\n  ContentPageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.module';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n              New Contact\n            </Button>\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin: auto;\n  padding: 20px;\n  display: grid;\n  justify-content: center;\n  justify-items: center;\n  gap: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n`;","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Form","styled","Label","Input","Button","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","alert","phone","addContact","reset","autoComplete","type","pattern","title","required","placeholder","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","UserDeletedIcon","FaUserMinus","ContactItem","ContactName","ContactNumber","ContactsListItem","id","onClick","userId","deleteContact","unwrap","then","originalPromiseResult","Notify","catch","ContactsList","ContactList","visibleContacts","contact","includes","console","log","map","AddUserIcon","FaUserPlus","ContentPageContainer","ContactNavWrapper","Title","FilterWrapper","Overlay","ModalContent","Modal","children","onCloseModal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","useState","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev","Section","SectionContainer"],"sourceRoot":""}